/*
 * main.c
 */
#include "userLib/common.h"
#include "userLib/init.h"
#include "userLib/pidController.h"
#include "userLib/movingArray.h"

int rpm;
int main(void) {
	SysCtlClockSet(SYSCTL_SYSDIV_5|SYSCTL_USE_PLL|SYSCTL_XTAL_16MHZ|SYSCTL_OSC_MAIN);
	motorDirInit();
	uart0Init();
	qeiInit();
	pwmInit();
	UART_TransmitString("Up and running\r",0);
	long maxPWM = SysCtlClockGet()/(64*PWMfrequency);
	int step = maxPWM/10;

	UART_OutDec(maxPWM,0);
	UARTCharPut(UART0_BASE,0x0D);
	int i;
	setPWM(maxPWM/2);
	//	timerInit();
	while(1) {
		/*for(i = 0; i <= maxPWM; i+=step) {
			setPWM(i);
			SysCtlDelay(3*40000000);
			UART_OutDec(rpm,0);
			UARTCharPut(UART0_BASE,0x0D);
			SysCtlDelay(2*40000000);
		}
		setPWM(0);
		break;*/
	}
	UART_TransmitString("\rEnd",0);
}

void Timer0IntHandler(void) {
	TimerIntClear(TIMER0_BASE, TIMER_TIMA_TIMEOUT);
	// Clear the timer interrupt

}

void UARTIntHandler(void) {

}

void QEIIntHandler(void) {
	QEIIntClear(QEI0_BASE, QEI_INTTIMER);
	rpm = movingArrayOut(calculateRPM());
}
