
Triwheel - PWM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000064  00800100  000009f2  00000a86  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009f2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000041  00800164  00800164  00000aea  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000aea  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000b1c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  00000b58  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c95  00000000  00000000  00000c30  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000502  00000000  00000000  000018c5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000807  00000000  00000000  00001dc7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000264  00000000  00000000  000025d0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000411  00000000  00000000  00002834  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000687  00000000  00000000  00002c45  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a8  00000000  00000000  000032cc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e2 ef       	ldi	r30, 0xF2	; 242
  a0:	f9 e0       	ldi	r31, 0x09	; 9
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a4 36       	cpi	r26, 0x64	; 100
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a4 e6       	ldi	r26, 0x64	; 100
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a5 3a       	cpi	r26, 0xA5	; 165
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	bd d1       	rcall	.+890    	; 0x43e <main>
  c4:	94 c4       	rjmp	.+2344   	; 0x9ee <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <triWheelEquation>:
	PWMC = wheel.rpmC * 33.33;
}

int isPressed(uint8_t dataByte, uint8_t dataBit) {
	return ((dataByte & (1 << dataBit)) ? 1 : 0);
}
  c8:	2f 92       	push	r2
  ca:	3f 92       	push	r3
  cc:	4f 92       	push	r4
  ce:	5f 92       	push	r5
  d0:	6f 92       	push	r6
  d2:	7f 92       	push	r7
  d4:	8f 92       	push	r8
  d6:	9f 92       	push	r9
  d8:	af 92       	push	r10
  da:	bf 92       	push	r11
  dc:	cf 92       	push	r12
  de:	df 92       	push	r13
  e0:	ef 92       	push	r14
  e2:	ff 92       	push	r15
  e4:	0f 93       	push	r16
  e6:	1f 93       	push	r17
  e8:	cf 93       	push	r28
  ea:	df 93       	push	r29
  ec:	cd b7       	in	r28, 0x3d	; 61
  ee:	de b7       	in	r29, 0x3e	; 62
  f0:	60 97       	sbiw	r28, 0x10	; 16
  f2:	0f b6       	in	r0, 0x3f	; 63
  f4:	f8 94       	cli
  f6:	de bf       	out	0x3e, r29	; 62
  f8:	0f be       	out	0x3f, r0	; 63
  fa:	cd bf       	out	0x3d, r28	; 61
  fc:	1c 01       	movw	r2, r24
  fe:	c9 82       	std	Y+1, r12	; 0x01
 100:	da 82       	std	Y+2, r13	; 0x02
 102:	eb 82       	std	Y+3, r14	; 0x03
 104:	fc 82       	std	Y+4, r15	; 0x04
 106:	0d 83       	std	Y+5, r16	; 0x05
 108:	1e 83       	std	Y+6, r17	; 0x06
 10a:	2f 83       	std	Y+7, r18	; 0x07
 10c:	38 87       	std	Y+8, r19	; 0x08
 10e:	49 87       	std	Y+9, r20	; 0x09
 110:	5a 87       	std	Y+10, r21	; 0x0a
 112:	6b 87       	std	Y+11, r22	; 0x0b
 114:	7c 87       	std	Y+12, r23	; 0x0c
 116:	49 80       	ldd	r4, Y+1	; 0x01
 118:	5a 80       	ldd	r5, Y+2	; 0x02
 11a:	6b 80       	ldd	r6, Y+3	; 0x03
 11c:	7c 80       	ldd	r7, Y+4	; 0x04
 11e:	2d e2       	ldi	r18, 0x2D	; 45
 120:	32 eb       	ldi	r19, 0xB2	; 178
 122:	4d e5       	ldi	r20, 0x5D	; 93
 124:	5f e3       	ldi	r21, 0x3F	; 63
 126:	6d 81       	ldd	r22, Y+5	; 0x05
 128:	7e 81       	ldd	r23, Y+6	; 0x06
 12a:	8f 81       	ldd	r24, Y+7	; 0x07
 12c:	98 85       	ldd	r25, Y+8	; 0x08
 12e:	d8 d3       	rcall	.+1968   	; 0x8e0 <__mulsf3>
 130:	6d 87       	std	Y+13, r22	; 0x0d
 132:	7e 87       	std	Y+14, r23	; 0x0e
 134:	8f 87       	std	Y+15, r24	; 0x0f
 136:	98 8b       	std	Y+16, r25	; 0x10
 138:	20 e0       	ldi	r18, 0x00	; 0
 13a:	30 e0       	ldi	r19, 0x00	; 0
 13c:	40 e0       	ldi	r20, 0x00	; 0
 13e:	5f e3       	ldi	r21, 0x3F	; 63
 140:	c3 01       	movw	r24, r6
 142:	b2 01       	movw	r22, r4
 144:	cd d3       	rcall	.+1946   	; 0x8e0 <__mulsf3>
 146:	6b 01       	movw	r12, r22
 148:	7c 01       	movw	r14, r24
 14a:	20 e0       	ldi	r18, 0x00	; 0
 14c:	30 e0       	ldi	r19, 0x00	; 0
 14e:	40 e9       	ldi	r20, 0x90	; 144
 150:	50 e4       	ldi	r21, 0x40	; 64
 152:	69 85       	ldd	r22, Y+9	; 0x09
 154:	7a 85       	ldd	r23, Y+10	; 0x0a
 156:	8b 85       	ldd	r24, Y+11	; 0x0b
 158:	9c 85       	ldd	r25, Y+12	; 0x0c
 15a:	c2 d3       	rcall	.+1924   	; 0x8e0 <__mulsf3>
 15c:	4b 01       	movw	r8, r22
 15e:	5c 01       	movw	r10, r24
 160:	a7 01       	movw	r20, r14
 162:	96 01       	movw	r18, r12
 164:	6d 85       	ldd	r22, Y+13	; 0x0d
 166:	7e 85       	ldd	r23, Y+14	; 0x0e
 168:	8f 85       	ldd	r24, Y+15	; 0x0f
 16a:	98 89       	ldd	r25, Y+16	; 0x10
 16c:	d3 d2       	rcall	.+1446   	; 0x714 <__subsf3>
 16e:	a5 01       	movw	r20, r10
 170:	94 01       	movw	r18, r8
 172:	d1 d2       	rcall	.+1442   	; 0x716 <__addsf3>
 174:	f1 01       	movw	r30, r2
 176:	60 83       	st	Z, r22
 178:	71 83       	std	Z+1, r23	; 0x01
 17a:	82 83       	std	Z+2, r24	; 0x02
 17c:	93 83       	std	Z+3, r25	; 0x03
 17e:	c7 01       	movw	r24, r14
 180:	b6 01       	movw	r22, r12
 182:	90 58       	subi	r25, 0x80	; 128
 184:	2d 85       	ldd	r18, Y+13	; 0x0d
 186:	3e 85       	ldd	r19, Y+14	; 0x0e
 188:	4f 85       	ldd	r20, Y+15	; 0x0f
 18a:	58 89       	ldd	r21, Y+16	; 0x10
 18c:	c3 d2       	rcall	.+1414   	; 0x714 <__subsf3>
 18e:	9b 01       	movw	r18, r22
 190:	ac 01       	movw	r20, r24
 192:	c5 01       	movw	r24, r10
 194:	b4 01       	movw	r22, r8
 196:	bf d2       	rcall	.+1406   	; 0x716 <__addsf3>
 198:	f1 01       	movw	r30, r2
 19a:	64 83       	std	Z+4, r22	; 0x04
 19c:	75 83       	std	Z+5, r23	; 0x05
 19e:	86 83       	std	Z+6, r24	; 0x06
 1a0:	97 83       	std	Z+7, r25	; 0x07
 1a2:	a3 01       	movw	r20, r6
 1a4:	92 01       	movw	r18, r4
 1a6:	c5 01       	movw	r24, r10
 1a8:	b4 01       	movw	r22, r8
 1aa:	b5 d2       	rcall	.+1386   	; 0x716 <__addsf3>
 1ac:	f1 01       	movw	r30, r2
 1ae:	60 87       	std	Z+8, r22	; 0x08
 1b0:	71 87       	std	Z+9, r23	; 0x09
 1b2:	82 87       	std	Z+10, r24	; 0x0a
 1b4:	93 87       	std	Z+11, r25	; 0x0b
 1b6:	c1 01       	movw	r24, r2
 1b8:	60 96       	adiw	r28, 0x10	; 16
 1ba:	0f b6       	in	r0, 0x3f	; 63
 1bc:	f8 94       	cli
 1be:	de bf       	out	0x3e, r29	; 62
 1c0:	0f be       	out	0x3f, r0	; 63
 1c2:	cd bf       	out	0x3d, r28	; 61
 1c4:	df 91       	pop	r29
 1c6:	cf 91       	pop	r28
 1c8:	1f 91       	pop	r17
 1ca:	0f 91       	pop	r16
 1cc:	ff 90       	pop	r15
 1ce:	ef 90       	pop	r14
 1d0:	df 90       	pop	r13
 1d2:	cf 90       	pop	r12
 1d4:	bf 90       	pop	r11
 1d6:	af 90       	pop	r10
 1d8:	9f 90       	pop	r9
 1da:	8f 90       	pop	r8
 1dc:	7f 90       	pop	r7
 1de:	6f 90       	pop	r6
 1e0:	5f 90       	pop	r5
 1e2:	4f 90       	pop	r4
 1e4:	3f 90       	pop	r3
 1e6:	2f 90       	pop	r2
 1e8:	08 95       	ret

000001ea <PWMupdate>:
 1ea:	cf 92       	push	r12
 1ec:	df 92       	push	r13
 1ee:	ef 92       	push	r14
 1f0:	ff 92       	push	r15
 1f2:	0f 93       	push	r16
 1f4:	1f 93       	push	r17
 1f6:	cf 93       	push	r28
 1f8:	df 93       	push	r29
 1fa:	cd b7       	in	r28, 0x3d	; 61
 1fc:	de b7       	in	r29, 0x3e	; 62
 1fe:	2c 97       	sbiw	r28, 0x0c	; 12
 200:	0f b6       	in	r0, 0x3f	; 63
 202:	f8 94       	cli
 204:	de bf       	out	0x3e, r29	; 62
 206:	0f be       	out	0x3f, r0	; 63
 208:	cd bf       	out	0x3d, r28	; 61
 20a:	e2 e7       	ldi	r30, 0x72	; 114
 20c:	f1 e0       	ldi	r31, 0x01	; 1
 20e:	10 82       	st	Z, r1
 210:	11 82       	std	Z+1, r1	; 0x01
 212:	12 82       	std	Z+2, r1	; 0x02
 214:	13 82       	std	Z+3, r1	; 0x03
 216:	14 82       	std	Z+4, r1	; 0x04
 218:	15 82       	std	Z+5, r1	; 0x05
 21a:	16 82       	std	Z+6, r1	; 0x06
 21c:	17 82       	std	Z+7, r1	; 0x07
 21e:	80 91 a4 01 	lds	r24, 0x01A4
 222:	88 23       	and	r24, r24
 224:	61 f0       	breq	.+24     	; 0x23e <PWMupdate+0x54>
 226:	80 e0       	ldi	r24, 0x00	; 0
 228:	90 e0       	ldi	r25, 0x00	; 0
 22a:	a8 e4       	ldi	r26, 0x48	; 72
 22c:	b3 e4       	ldi	r27, 0x43	; 67
 22e:	80 93 76 01 	sts	0x0176, r24
 232:	90 93 77 01 	sts	0x0177, r25
 236:	a0 93 78 01 	sts	0x0178, r26
 23a:	b0 93 79 01 	sts	0x0179, r27
 23e:	80 91 a2 01 	lds	r24, 0x01A2
 242:	88 23       	and	r24, r24
 244:	61 f0       	breq	.+24     	; 0x25e <PWMupdate+0x74>
 246:	80 e0       	ldi	r24, 0x00	; 0
 248:	90 e0       	ldi	r25, 0x00	; 0
 24a:	a8 e4       	ldi	r26, 0x48	; 72
 24c:	b3 ec       	ldi	r27, 0xC3	; 195
 24e:	80 93 76 01 	sts	0x0176, r24
 252:	90 93 77 01 	sts	0x0177, r25
 256:	a0 93 78 01 	sts	0x0178, r26
 25a:	b0 93 79 01 	sts	0x0179, r27
 25e:	80 91 70 01 	lds	r24, 0x0170
 262:	88 23       	and	r24, r24
 264:	61 f0       	breq	.+24     	; 0x27e <PWMupdate+0x94>
 266:	80 e0       	ldi	r24, 0x00	; 0
 268:	90 e0       	ldi	r25, 0x00	; 0
 26a:	a8 e4       	ldi	r26, 0x48	; 72
 26c:	b3 e4       	ldi	r27, 0x43	; 67
 26e:	80 93 72 01 	sts	0x0172, r24
 272:	90 93 73 01 	sts	0x0173, r25
 276:	a0 93 74 01 	sts	0x0174, r26
 27a:	b0 93 75 01 	sts	0x0175, r27
 27e:	80 91 a1 01 	lds	r24, 0x01A1
 282:	88 23       	and	r24, r24
 284:	61 f0       	breq	.+24     	; 0x29e <PWMupdate+0xb4>
 286:	80 e0       	ldi	r24, 0x00	; 0
 288:	90 e0       	ldi	r25, 0x00	; 0
 28a:	a8 e4       	ldi	r26, 0x48	; 72
 28c:	b3 ec       	ldi	r27, 0xC3	; 195
 28e:	80 93 72 01 	sts	0x0172, r24
 292:	90 93 73 01 	sts	0x0173, r25
 296:	a0 93 74 01 	sts	0x0174, r26
 29a:	b0 93 75 01 	sts	0x0175, r27
 29e:	10 92 7a 01 	sts	0x017A, r1
 2a2:	10 92 7b 01 	sts	0x017B, r1
 2a6:	10 92 7c 01 	sts	0x017C, r1
 2aa:	10 92 7d 01 	sts	0x017D, r1
 2ae:	c0 90 72 01 	lds	r12, 0x0172
 2b2:	d0 90 73 01 	lds	r13, 0x0173
 2b6:	e0 90 74 01 	lds	r14, 0x0174
 2ba:	f0 90 75 01 	lds	r15, 0x0175
 2be:	00 91 76 01 	lds	r16, 0x0176
 2c2:	10 91 77 01 	lds	r17, 0x0177
 2c6:	20 91 78 01 	lds	r18, 0x0178
 2ca:	30 91 79 01 	lds	r19, 0x0179
 2ce:	40 e0       	ldi	r20, 0x00	; 0
 2d0:	50 91 7b 01 	lds	r21, 0x017B
 2d4:	60 91 7c 01 	lds	r22, 0x017C
 2d8:	70 91 7d 01 	lds	r23, 0x017D
 2dc:	ce 01       	movw	r24, r28
 2de:	01 96       	adiw	r24, 0x01	; 1
 2e0:	f3 de       	rcall	.-538    	; 0xc8 <triWheelEquation>
 2e2:	8c e0       	ldi	r24, 0x0C	; 12
 2e4:	fe 01       	movw	r30, r28
 2e6:	31 96       	adiw	r30, 0x01	; 1
 2e8:	a4 e6       	ldi	r26, 0x64	; 100
 2ea:	b1 e0       	ldi	r27, 0x01	; 1
 2ec:	01 90       	ld	r0, Z+
 2ee:	0d 92       	st	X+, r0
 2f0:	8a 95       	dec	r24
 2f2:	e1 f7       	brne	.-8      	; 0x2ec <PWMupdate+0x102>
 2f4:	20 e0       	ldi	r18, 0x00	; 0
 2f6:	30 e0       	ldi	r19, 0x00	; 0
 2f8:	a9 01       	movw	r20, r18
 2fa:	60 91 64 01 	lds	r22, 0x0164
 2fe:	70 91 65 01 	lds	r23, 0x0165
 302:	80 91 66 01 	lds	r24, 0x0166
 306:	90 91 67 01 	lds	r25, 0x0167
 30a:	e6 d2       	rcall	.+1484   	; 0x8d8 <__gesf2>
 30c:	88 23       	and	r24, r24
 30e:	1c f0       	brlt	.+6      	; 0x316 <PWMupdate+0x12c>
 310:	a8 9a       	sbi	0x15, 0	; 21
 312:	a9 98       	cbi	0x15, 1	; 21
 314:	0d c0       	rjmp	.+26     	; 0x330 <PWMupdate+0x146>
 316:	a9 9a       	sbi	0x15, 1	; 21
 318:	a8 98       	cbi	0x15, 0	; 21
 31a:	e4 e6       	ldi	r30, 0x64	; 100
 31c:	f1 e0       	ldi	r31, 0x01	; 1
 31e:	80 81       	ld	r24, Z
 320:	91 81       	ldd	r25, Z+1	; 0x01
 322:	a2 81       	ldd	r26, Z+2	; 0x02
 324:	b3 81       	ldd	r27, Z+3	; 0x03
 326:	b0 58       	subi	r27, 0x80	; 128
 328:	80 83       	st	Z, r24
 32a:	91 83       	std	Z+1, r25	; 0x01
 32c:	a2 83       	std	Z+2, r26	; 0x02
 32e:	b3 83       	std	Z+3, r27	; 0x03
 330:	04 e6       	ldi	r16, 0x64	; 100
 332:	11 e0       	ldi	r17, 0x01	; 1
 334:	2a e9       	ldi	r18, 0x9A	; 154
 336:	39 e9       	ldi	r19, 0x99	; 153
 338:	49 ee       	ldi	r20, 0xE9	; 233
 33a:	51 e4       	ldi	r21, 0x41	; 65
 33c:	f8 01       	movw	r30, r16
 33e:	60 81       	ld	r22, Z
 340:	71 81       	ldd	r23, Z+1	; 0x01
 342:	82 81       	ldd	r24, Z+2	; 0x02
 344:	93 81       	ldd	r25, Z+3	; 0x03
 346:	cc d2       	rcall	.+1432   	; 0x8e0 <__mulsf3>
 348:	4a d2       	rcall	.+1172   	; 0x7de <__fixunssfsi>
 34a:	7b bd       	out	0x2b, r23	; 43
 34c:	6a bd       	out	0x2a, r22	; 42
 34e:	20 e0       	ldi	r18, 0x00	; 0
 350:	30 e0       	ldi	r19, 0x00	; 0
 352:	a9 01       	movw	r20, r18
 354:	f8 01       	movw	r30, r16
 356:	64 81       	ldd	r22, Z+4	; 0x04
 358:	75 81       	ldd	r23, Z+5	; 0x05
 35a:	86 81       	ldd	r24, Z+6	; 0x06
 35c:	97 81       	ldd	r25, Z+7	; 0x07
 35e:	bc d2       	rcall	.+1400   	; 0x8d8 <__gesf2>
 360:	88 23       	and	r24, r24
 362:	1c f0       	brlt	.+6      	; 0x36a <PWMupdate+0x180>
 364:	aa 9a       	sbi	0x15, 2	; 21
 366:	ab 98       	cbi	0x15, 3	; 21
 368:	0d c0       	rjmp	.+26     	; 0x384 <PWMupdate+0x19a>
 36a:	ab 9a       	sbi	0x15, 3	; 21
 36c:	aa 98       	cbi	0x15, 2	; 21
 36e:	e4 e6       	ldi	r30, 0x64	; 100
 370:	f1 e0       	ldi	r31, 0x01	; 1
 372:	84 81       	ldd	r24, Z+4	; 0x04
 374:	95 81       	ldd	r25, Z+5	; 0x05
 376:	a6 81       	ldd	r26, Z+6	; 0x06
 378:	b7 81       	ldd	r27, Z+7	; 0x07
 37a:	b0 58       	subi	r27, 0x80	; 128
 37c:	84 83       	std	Z+4, r24	; 0x04
 37e:	95 83       	std	Z+5, r25	; 0x05
 380:	a6 83       	std	Z+6, r26	; 0x06
 382:	b7 83       	std	Z+7, r27	; 0x07
 384:	04 e6       	ldi	r16, 0x64	; 100
 386:	11 e0       	ldi	r17, 0x01	; 1
 388:	20 e0       	ldi	r18, 0x00	; 0
 38a:	30 e0       	ldi	r19, 0x00	; 0
 38c:	40 ef       	ldi	r20, 0xF0	; 240
 38e:	51 e4       	ldi	r21, 0x41	; 65
 390:	f8 01       	movw	r30, r16
 392:	64 81       	ldd	r22, Z+4	; 0x04
 394:	75 81       	ldd	r23, Z+5	; 0x05
 396:	86 81       	ldd	r24, Z+6	; 0x06
 398:	97 81       	ldd	r25, Z+7	; 0x07
 39a:	a2 d2       	rcall	.+1348   	; 0x8e0 <__mulsf3>
 39c:	20 d2       	rcall	.+1088   	; 0x7de <__fixunssfsi>
 39e:	79 bd       	out	0x29, r23	; 41
 3a0:	68 bd       	out	0x28, r22	; 40
 3a2:	20 e0       	ldi	r18, 0x00	; 0
 3a4:	30 e0       	ldi	r19, 0x00	; 0
 3a6:	a9 01       	movw	r20, r18
 3a8:	f8 01       	movw	r30, r16
 3aa:	60 85       	ldd	r22, Z+8	; 0x08
 3ac:	71 85       	ldd	r23, Z+9	; 0x09
 3ae:	82 85       	ldd	r24, Z+10	; 0x0a
 3b0:	93 85       	ldd	r25, Z+11	; 0x0b
 3b2:	92 d2       	rcall	.+1316   	; 0x8d8 <__gesf2>
 3b4:	88 23       	and	r24, r24
 3b6:	1c f0       	brlt	.+6      	; 0x3be <PWMupdate+0x1d4>
 3b8:	ac 9a       	sbi	0x15, 4	; 21
 3ba:	ad 98       	cbi	0x15, 5	; 21
 3bc:	0d c0       	rjmp	.+26     	; 0x3d8 <PWMupdate+0x1ee>
 3be:	ad 9a       	sbi	0x15, 5	; 21
 3c0:	ac 98       	cbi	0x15, 4	; 21
 3c2:	e4 e6       	ldi	r30, 0x64	; 100
 3c4:	f1 e0       	ldi	r31, 0x01	; 1
 3c6:	80 85       	ldd	r24, Z+8	; 0x08
 3c8:	91 85       	ldd	r25, Z+9	; 0x09
 3ca:	a2 85       	ldd	r26, Z+10	; 0x0a
 3cc:	b3 85       	ldd	r27, Z+11	; 0x0b
 3ce:	b0 58       	subi	r27, 0x80	; 128
 3d0:	80 87       	std	Z+8, r24	; 0x08
 3d2:	91 87       	std	Z+9, r25	; 0x09
 3d4:	a2 87       	std	Z+10, r26	; 0x0a
 3d6:	b3 87       	std	Z+11, r27	; 0x0b
 3d8:	2c ee       	ldi	r18, 0xEC	; 236
 3da:	31 e5       	ldi	r19, 0x51	; 81
 3dc:	45 e0       	ldi	r20, 0x05	; 5
 3de:	52 e4       	ldi	r21, 0x42	; 66
 3e0:	60 91 6c 01 	lds	r22, 0x016C
 3e4:	70 91 6d 01 	lds	r23, 0x016D
 3e8:	80 91 6e 01 	lds	r24, 0x016E
 3ec:	90 91 6f 01 	lds	r25, 0x016F
 3f0:	77 d2       	rcall	.+1262   	; 0x8e0 <__mulsf3>
 3f2:	f5 d1       	rcall	.+1002   	; 0x7de <__fixunssfsi>
 3f4:	70 93 79 00 	sts	0x0079, r23
 3f8:	60 93 78 00 	sts	0x0078, r22
 3fc:	2c 96       	adiw	r28, 0x0c	; 12
 3fe:	0f b6       	in	r0, 0x3f	; 63
 400:	f8 94       	cli
 402:	de bf       	out	0x3e, r29	; 62
 404:	0f be       	out	0x3f, r0	; 63
 406:	cd bf       	out	0x3d, r28	; 61
 408:	df 91       	pop	r29
 40a:	cf 91       	pop	r28
 40c:	1f 91       	pop	r17
 40e:	0f 91       	pop	r16
 410:	ff 90       	pop	r15
 412:	ef 90       	pop	r14
 414:	df 90       	pop	r13
 416:	cf 90       	pop	r12
 418:	08 95       	ret

0000041a <motorDirInit>:

void motorDirInit(void) {
	motorDirPort = 0xFF;
 41a:	8f ef       	ldi	r24, 0xFF	; 255
 41c:	84 bb       	out	0x14, r24	; 20
	motorOutPort = 0x00;
 41e:	15 ba       	out	0x15, r1	; 21
 420:	08 95       	ret

00000422 <PWMinit>:
}

void PWMinit(void) {
	PWMPort |= 1<<PWMApin | 1<<PWMBpin | 1<<PWMCpin;
 422:	87 b3       	in	r24, 0x17	; 23
 424:	80 6e       	ori	r24, 0xE0	; 224
 426:	87 bb       	out	0x17, r24	; 23
	TCCR1A |= 1<<COM1A1 | 1<< COM1B1 | 1<<COM1C1 | 1<<WGM11;
 428:	8f b5       	in	r24, 0x2f	; 47
 42a:	8a 6a       	ori	r24, 0xAA	; 170
 42c:	8f bd       	out	0x2f, r24	; 47
	TCCR1B |= 1<<WGM12 | 1<<WGM13 | 1<<CS10;
 42e:	8e b5       	in	r24, 0x2e	; 46
 430:	89 61       	ori	r24, 0x19	; 25
 432:	8e bd       	out	0x2e, r24	; 46
	ICR1 = 20000;
 434:	80 e2       	ldi	r24, 0x20	; 32
 436:	9e e4       	ldi	r25, 0x4E	; 78
 438:	97 bd       	out	0x27, r25	; 39
 43a:	86 bd       	out	0x26, r24	; 38
 43c:	08 95       	ret

0000043e <main>:
}

int main(void) {
	USART_Init(12,0);
 43e:	60 e0       	ldi	r22, 0x00	; 0
 440:	8c e0       	ldi	r24, 0x0C	; 12
 442:	90 e0       	ldi	r25, 0x00	; 0
 444:	29 d1       	rcall	.+594    	; 0x698 <USART_Init>
	motorDirInit();
 446:	e9 df       	rcall	.-46     	; 0x41a <motorDirInit>
	PWMinit();
 448:	ec df       	rcall	.-40     	; 0x422 <PWMinit>
	USART_TransmitString("Pin Config done.\n",0);
 44a:	60 e0       	ldi	r22, 0x00	; 0
 44c:	89 e2       	ldi	r24, 0x29	; 41
 44e:	91 e0       	ldi	r25, 0x01	; 1
 450:	4f d1       	rcall	.+670    	; 0x6f0 <USART_TransmitString>
	init_PS2();
 452:	6d d0       	rcall	.+218    	; 0x52e <init_PS2>
	USART_TransmitString("PS2 Config done.\n",0);
 454:	60 e0       	ldi	r22, 0x00	; 0
 456:	8b e3       	ldi	r24, 0x3B	; 59
 458:	91 e0       	ldi	r25, 0x01	; 1
 45a:	4a d1       	rcall	.+660    	; 0x6f0 <USART_TransmitString>
	uint8_t x;
    while (1) {
		scan_PS2();
		x = ~(data_array[3]);
 45c:	0b e8       	ldi	r16, 0x8B	; 139
 45e:	11 e0       	ldi	r17, 0x01	; 1
		if(isPressed(x, up)) {
			USART_TransmitString("Up ",0);
			UP = true;
 460:	d1 e0       	ldi	r29, 0x01	; 1
	USART_TransmitString("Pin Config done.\n",0);
	init_PS2();
	USART_TransmitString("PS2 Config done.\n",0);
	uint8_t x;
    while (1) {
		scan_PS2();
 462:	07 d1       	rcall	.+526    	; 0x672 <scan_PS2>
		x = ~(data_array[3]);
 464:	f8 01       	movw	r30, r16
 466:	c3 81       	ldd	r28, Z+3	; 0x03
 468:	c0 95       	com	r28
		if(isPressed(x, up)) {
 46a:	c4 ff       	sbrs	r28, 4
 46c:	07 c0       	rjmp	.+14     	; 0x47c <main+0x3e>
			USART_TransmitString("Up ",0);
 46e:	60 e0       	ldi	r22, 0x00	; 0
 470:	8d e4       	ldi	r24, 0x4D	; 77
 472:	91 e0       	ldi	r25, 0x01	; 1
 474:	3d d1       	rcall	.+634    	; 0x6f0 <USART_TransmitString>
			UP = true;
 476:	d0 93 a4 01 	sts	0x01A4, r29
 47a:	02 c0       	rjmp	.+4      	; 0x480 <main+0x42>
		} else {
			UP = false;
 47c:	10 92 a4 01 	sts	0x01A4, r1
		}
		if(isPressed(x, down)) {
 480:	c6 ff       	sbrs	r28, 6
 482:	07 c0       	rjmp	.+14     	; 0x492 <main+0x54>
			USART_TransmitString("Down ",0);
 484:	60 e0       	ldi	r22, 0x00	; 0
 486:	81 e5       	ldi	r24, 0x51	; 81
 488:	91 e0       	ldi	r25, 0x01	; 1
 48a:	32 d1       	rcall	.+612    	; 0x6f0 <USART_TransmitString>
			DOWN = true;
 48c:	d0 93 a2 01 	sts	0x01A2, r29
 490:	02 c0       	rjmp	.+4      	; 0x496 <main+0x58>
		} else {
			DOWN = false;
 492:	10 92 a2 01 	sts	0x01A2, r1
		}
		if(isPressed(x, right)) {
 496:	c5 ff       	sbrs	r28, 5
 498:	07 c0       	rjmp	.+14     	; 0x4a8 <main+0x6a>
			USART_TransmitString("Right ",0);
 49a:	60 e0       	ldi	r22, 0x00	; 0
 49c:	87 e5       	ldi	r24, 0x57	; 87
 49e:	91 e0       	ldi	r25, 0x01	; 1
 4a0:	27 d1       	rcall	.+590    	; 0x6f0 <USART_TransmitString>
			RIGHT = true;
 4a2:	d0 93 70 01 	sts	0x0170, r29
 4a6:	02 c0       	rjmp	.+4      	; 0x4ac <main+0x6e>
		} else {
			RIGHT = false;
 4a8:	10 92 70 01 	sts	0x0170, r1
		}
		if(isPressed(x, left)) {
 4ac:	cc 23       	and	r28, r28
 4ae:	3c f4       	brge	.+14     	; 0x4be <main+0x80>
			USART_TransmitString("Left ",0);
 4b0:	60 e0       	ldi	r22, 0x00	; 0
 4b2:	8e e5       	ldi	r24, 0x5E	; 94
 4b4:	91 e0       	ldi	r25, 0x01	; 1
 4b6:	1c d1       	rcall	.+568    	; 0x6f0 <USART_TransmitString>
			LEFT = true;
 4b8:	d0 93 a1 01 	sts	0x01A1, r29
 4bc:	02 c0       	rjmp	.+4      	; 0x4c2 <main+0x84>
		} else {
			LEFT = false;
 4be:	10 92 a1 01 	sts	0x01A1, r1
		}
		USART_Transmitchar(0x0D,0);		
 4c2:	60 e0       	ldi	r22, 0x00	; 0
 4c4:	8d e0       	ldi	r24, 0x0D	; 13
 4c6:	06 d1       	rcall	.+524    	; 0x6d4 <USART_Transmitchar>
		PWMupdate();
 4c8:	90 de       	rcall	.-736    	; 0x1ea <PWMupdate>
	}
 4ca:	cb cf       	rjmp	.-106    	; 0x462 <main+0x24>

000004cc <SPI_send>:
	SPI_PORT |= _BV(SS_PIN);	// Driving Attention Low
	_delay_ms(1);	
}

char SPI_send(char send_x) {
	SPDR = send_x;
 4cc:	8f b9       	out	0x0f, r24	; 15
	while(!(SPSR & _BV(SPIF)));
 4ce:	77 9b       	sbis	0x0e, 7	; 14
 4d0:	fe cf       	rjmp	.-4      	; 0x4ce <SPI_send+0x2>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 4d2:	80 e5       	ldi	r24, 0x50	; 80
 4d4:	8a 95       	dec	r24
 4d6:	f1 f7       	brne	.-4      	; 0x4d4 <SPI_send+0x8>
	_delay_us(30);
	send_x = SPDR;
 4d8:	8f b1       	in	r24, 0x0f	; 15
	return(send_x);
}
 4da:	08 95       	ret

000004dc <SPI_send_array>:

void SPI_send_array(char *a, char cmd_length) {
 4dc:	cf 92       	push	r12
 4de:	df 92       	push	r13
 4e0:	ef 92       	push	r14
 4e2:	ff 92       	push	r15
 4e4:	0f 93       	push	r16
 4e6:	1f 93       	push	r17
 4e8:	cf 93       	push	r28
 4ea:	df 93       	push	r29
	for(uint8_t i=0; i < cmd_length; i++) {
 4ec:	66 23       	and	r22, r22
 4ee:	b1 f0       	breq	.+44     	; 0x51c <SPI_send_array+0x40>
 4f0:	6c 01       	movw	r12, r24
 4f2:	61 50       	subi	r22, 0x01	; 1
 4f4:	e6 2e       	mov	r14, r22
 4f6:	f1 2c       	mov	r15, r1
 4f8:	8f ef       	ldi	r24, 0xFF	; 255
 4fa:	e8 1a       	sub	r14, r24
 4fc:	f8 0a       	sbc	r15, r24
 4fe:	ec 0c       	add	r14, r12
 500:	fd 1c       	adc	r15, r13
 502:	e6 01       	movw	r28, r12
 504:	8e 01       	movw	r16, r28
 506:	0c 19       	sub	r16, r12
 508:	1d 09       	sbc	r17, r13
		data_array[i]= SPI_send(*a);
 50a:	89 91       	ld	r24, Y+
 50c:	df df       	rcall	.-66     	; 0x4cc <SPI_send>
 50e:	f8 01       	movw	r30, r16
 510:	e5 57       	subi	r30, 0x75	; 117
 512:	fe 4f       	sbci	r31, 0xFE	; 254
 514:	80 83       	st	Z, r24
	send_x = SPDR;
	return(send_x);
}

void SPI_send_array(char *a, char cmd_length) {
	for(uint8_t i=0; i < cmd_length; i++) {
 516:	ce 15       	cp	r28, r14
 518:	df 05       	cpc	r29, r15
 51a:	a1 f7       	brne	.-24     	; 0x504 <SPI_send_array+0x28>
		data_array[i]= SPI_send(*a);
		a++;
	}
}
 51c:	df 91       	pop	r29
 51e:	cf 91       	pop	r28
 520:	1f 91       	pop	r17
 522:	0f 91       	pop	r16
 524:	ff 90       	pop	r15
 526:	ef 90       	pop	r14
 528:	df 90       	pop	r13
 52a:	cf 90       	pop	r12
 52c:	08 95       	ret

0000052e <init_PS2>:
#include <avr/interrupt.h>
#include <util/delay.h>

#include "PS2.h"

void init_PS2() {
 52e:	cf 93       	push	r28
 530:	df 93       	push	r29
 532:	cd b7       	in	r28, 0x3d	; 61
 534:	de b7       	in	r29, 0x3e	; 62
 536:	a9 97       	sbiw	r28, 0x29	; 41
 538:	0f b6       	in	r0, 0x3f	; 63
 53a:	f8 94       	cli
 53c:	de bf       	out	0x3e, r29	; 62
 53e:	0f be       	out	0x3f, r0	; 63
 540:	cd bf       	out	0x3d, r28	; 61
// All pins o/p except MISO, Pull up enabled on MISO
	SPI_DDR |= (_BV(MOSI_PIN)) | _BV(SCK_PIN) | _BV(SS_PIN);
 542:	87 b3       	in	r24, 0x17	; 23
 544:	87 60       	ori	r24, 0x07	; 7
 546:	87 bb       	out	0x17, r24	; 23
	SPI_DDR &= ~(_BV(MISO_PIN));
 548:	bb 98       	cbi	0x17, 3	; 23
	SPI_PORT |= _BV(MISO_PIN);
 54a:	c3 9a       	sbi	0x18, 3	; 24
// SPI interrupt disabled, SPI enable, will be enabled after initialization
// LSB first, Master Mode,
// First edge of Clock- Falling
// Sample on Trailing Edge
// Clock Frequency 500kHz for 8MHZ crystal
	SPCR= 0b01111101;
 54c:	8d e7       	ldi	r24, 0x7D	; 125
 54e:	8d b9       	out	0x0d, r24	; 13

// PS2 initialization
	char  PS2_CONFIGMODE[5]= {0x01, 0x43, 0x00, 0x01, 0x00};
 550:	85 e0       	ldi	r24, 0x05	; 5
 552:	e0 e0       	ldi	r30, 0x00	; 0
 554:	f1 e0       	ldi	r31, 0x01	; 1
 556:	de 01       	movw	r26, r28
 558:	11 96       	adiw	r26, 0x01	; 1
 55a:	01 90       	ld	r0, Z+
 55c:	0d 92       	st	X+, r0
 55e:	8a 95       	dec	r24
 560:	e1 f7       	brne	.-8      	; 0x55a <init_PS2+0x2c>
	char  PS2_ANALOGMODE[9]= {0x01, 0x44, 0x00, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00};
 562:	89 e0       	ldi	r24, 0x09	; 9
 564:	e5 e0       	ldi	r30, 0x05	; 5
 566:	f1 e0       	ldi	r31, 0x01	; 1
 568:	de 01       	movw	r26, r28
 56a:	16 96       	adiw	r26, 0x06	; 6
 56c:	01 90       	ld	r0, Z+
 56e:	0d 92       	st	X+, r0
 570:	8a 95       	dec	r24
 572:	e1 f7       	brne	.-8      	; 0x56c <init_PS2+0x3e>
	char  PS2_SETUPMOTOR[9]= {0x01, 0x4D, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff};
 574:	89 e0       	ldi	r24, 0x09	; 9
 576:	ee e0       	ldi	r30, 0x0E	; 14
 578:	f1 e0       	ldi	r31, 0x01	; 1
 57a:	de 01       	movw	r26, r28
 57c:	1f 96       	adiw	r26, 0x0f	; 15
 57e:	01 90       	ld	r0, Z+
 580:	0d 92       	st	X+, r0
 582:	8a 95       	dec	r24
 584:	e1 f7       	brne	.-8      	; 0x57e <init_PS2+0x50>
//	char  PS2_RETURNPRES[9]= {0x01, 0x4f, 0x00, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0x00};
	char  PS2_EXITCONFIG[9]= {0x01, 0x43, 0x00, 0x00, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a};
 586:	89 e0       	ldi	r24, 0x09	; 9
 588:	e7 e1       	ldi	r30, 0x17	; 23
 58a:	f1 e0       	ldi	r31, 0x01	; 1
 58c:	de 01       	movw	r26, r28
 58e:	58 96       	adiw	r26, 0x18	; 24
 590:	01 90       	ld	r0, Z+
 592:	0d 92       	st	X+, r0
 594:	8a 95       	dec	r24
 596:	e1 f7       	brne	.-8      	; 0x590 <init_PS2+0x62>

// Enter Config mode
	SPI_PORT &= ~(_BV(SS_PIN));	//ATT held low	
 598:	c0 98       	cbi	0x18, 0	; 24
	a=0;
 59a:	10 92 a3 01 	sts	0x01A3, r1
	b=0;
 59e:	10 92 71 01 	sts	0x0171, r1
	c=0;
 5a2:	10 92 a0 01 	sts	0x01A0, r1
	SPI_send_array(PS2_CONFIGMODE,5);		
 5a6:	65 e0       	ldi	r22, 0x05	; 5
 5a8:	ce 01       	movw	r24, r28
 5aa:	01 96       	adiw	r24, 0x01	; 1
 5ac:	97 df       	rcall	.-210    	; 0x4dc <SPI_send_array>
	SPI_PORT |= _BV(SS_PIN);	// Driving Attention Low
 5ae:	c0 9a       	sbi	0x18, 0	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 5b0:	8f ec       	ldi	r24, 0xCF	; 207
 5b2:	97 e0       	ldi	r25, 0x07	; 7
 5b4:	01 97       	sbiw	r24, 0x01	; 1
 5b6:	f1 f7       	brne	.-4      	; 0x5b4 <init_PS2+0x86>
 5b8:	00 c0       	rjmp	.+0      	; 0x5ba <init_PS2+0x8c>
 5ba:	00 00       	nop
	_delay_ms(1);

// Enter Analog Mode
	SPI_PORT &= ~(_BV(SS_PIN));	//ATT held low	
 5bc:	c0 98       	cbi	0x18, 0	; 24
	a=0;
 5be:	10 92 a3 01 	sts	0x01A3, r1
	b=0;
 5c2:	10 92 71 01 	sts	0x0171, r1
	c=0;
 5c6:	10 92 a0 01 	sts	0x01A0, r1
	SPI_send_array(PS2_ANALOGMODE,9);		
 5ca:	69 e0       	ldi	r22, 0x09	; 9
 5cc:	ce 01       	movw	r24, r28
 5ce:	06 96       	adiw	r24, 0x06	; 6
 5d0:	85 df       	rcall	.-246    	; 0x4dc <SPI_send_array>
	SPI_PORT |= _BV(SS_PIN);	// Driving Attention Low
 5d2:	c0 9a       	sbi	0x18, 0	; 24
 5d4:	8f ec       	ldi	r24, 0xCF	; 207
 5d6:	97 e0       	ldi	r25, 0x07	; 7
 5d8:	01 97       	sbiw	r24, 0x01	; 1
 5da:	f1 f7       	brne	.-4      	; 0x5d8 <init_PS2+0xaa>
 5dc:	00 c0       	rjmp	.+0      	; 0x5de <init_PS2+0xb0>
 5de:	00 00       	nop
	_delay_ms(1);

// Setup Motor
	SPI_PORT &= ~(_BV(SS_PIN));	//ATT held low	
 5e0:	c0 98       	cbi	0x18, 0	; 24
	a=0;
 5e2:	10 92 a3 01 	sts	0x01A3, r1
	b=0;
 5e6:	10 92 71 01 	sts	0x0171, r1
	c=0;
 5ea:	10 92 a0 01 	sts	0x01A0, r1
	SPI_send_array(PS2_SETUPMOTOR,9);		
 5ee:	69 e0       	ldi	r22, 0x09	; 9
 5f0:	ce 01       	movw	r24, r28
 5f2:	0f 96       	adiw	r24, 0x0f	; 15
 5f4:	73 df       	rcall	.-282    	; 0x4dc <SPI_send_array>
	SPI_PORT |= _BV(SS_PIN);	// Driving Attention Low
 5f6:	c0 9a       	sbi	0x18, 0	; 24
 5f8:	8f ec       	ldi	r24, 0xCF	; 207
 5fa:	97 e0       	ldi	r25, 0x07	; 7
 5fc:	01 97       	sbiw	r24, 0x01	; 1
 5fe:	f1 f7       	brne	.-4      	; 0x5fc <init_PS2+0xce>
 600:	00 c0       	rjmp	.+0      	; 0x602 <init_PS2+0xd4>
 602:	00 00       	nop
	_delay_ms(1);

// Exit Config
	SPI_PORT &= ~(_BV(SS_PIN));	//ATT held low	
 604:	c0 98       	cbi	0x18, 0	; 24
	a=0;
 606:	10 92 a3 01 	sts	0x01A3, r1
	b=0;
 60a:	10 92 71 01 	sts	0x0171, r1
	c=0;
 60e:	10 92 a0 01 	sts	0x01A0, r1
	SPI_send_array(PS2_EXITCONFIG,9);
 612:	69 e0       	ldi	r22, 0x09	; 9
 614:	ce 01       	movw	r24, r28
 616:	48 96       	adiw	r24, 0x18	; 24
 618:	61 df       	rcall	.-318    	; 0x4dc <SPI_send_array>
	SPI_PORT |= _BV(SS_PIN);	// Driving Attention Low
 61a:	c0 9a       	sbi	0x18, 0	; 24
 61c:	8f ec       	ldi	r24, 0xCF	; 207
 61e:	97 e0       	ldi	r25, 0x07	; 7
 620:	01 97       	sbiw	r24, 0x01	; 1
 622:	f1 f7       	brne	.-4      	; 0x620 <init_PS2+0xf2>
 624:	00 c0       	rjmp	.+0      	; 0x626 <init_PS2+0xf8>
 626:	00 00       	nop
	_delay_ms(1);

// Enter values in PS2_POLLBUTTON
	volatile char ps2_init_array[9]= {0x01, 0x42, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00};
 628:	89 e0       	ldi	r24, 0x09	; 9
 62a:	e0 e2       	ldi	r30, 0x20	; 32
 62c:	f1 e0       	ldi	r31, 0x01	; 1
 62e:	de 01       	movw	r26, r28
 630:	91 96       	adiw	r26, 0x21	; 33
 632:	01 90       	ld	r0, Z+
 634:	0d 92       	st	X+, r0
 636:	8a 95       	dec	r24
 638:	e1 f7       	brne	.-8      	; 0x632 <init_PS2+0x104>
 63a:	42 e8       	ldi	r20, 0x82	; 130
 63c:	51 e0       	ldi	r21, 0x01	; 1
 63e:	2c e8       	ldi	r18, 0x8C	; 140
 640:	31 e0       	ldi	r19, 0x01	; 1
 642:	fa 01       	movw	r30, r20
 644:	df 01       	movw	r26, r30
 646:	a4 1b       	sub	r26, r20
 648:	b5 0b       	sbc	r27, r21
	for(uint8_t i = 0; i < 10; i++) {
		PS2_POLLBUTTON[i] = ps2_init_array[i];
 64a:	81 e2       	ldi	r24, 0x21	; 33
 64c:	90 e0       	ldi	r25, 0x00	; 0
 64e:	8c 0f       	add	r24, r28
 650:	9d 1f       	adc	r25, r29
 652:	a8 0f       	add	r26, r24
 654:	b9 1f       	adc	r27, r25
 656:	8c 91       	ld	r24, X
 658:	81 93       	st	Z+, r24
	SPI_PORT |= _BV(SS_PIN);	// Driving Attention Low
	_delay_ms(1);

// Enter values in PS2_POLLBUTTON
	volatile char ps2_init_array[9]= {0x01, 0x42, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00};
	for(uint8_t i = 0; i < 10; i++) {
 65a:	e2 17       	cp	r30, r18
 65c:	f3 07       	cpc	r31, r19
 65e:	91 f7       	brne	.-28     	; 0x644 <init_PS2+0x116>
		PS2_POLLBUTTON[i] = ps2_init_array[i];
	}
}
 660:	a9 96       	adiw	r28, 0x29	; 41
 662:	0f b6       	in	r0, 0x3f	; 63
 664:	f8 94       	cli
 666:	de bf       	out	0x3e, r29	; 62
 668:	0f be       	out	0x3f, r0	; 63
 66a:	cd bf       	out	0x3d, r28	; 61
 66c:	df 91       	pop	r29
 66e:	cf 91       	pop	r28
 670:	08 95       	ret

00000672 <scan_PS2>:

void scan_PS2() {
	SPI_PORT &= ~(_BV(SS_PIN));	//ATT held low	
 672:	c0 98       	cbi	0x18, 0	; 24
	a=0;	
 674:	10 92 a3 01 	sts	0x01A3, r1
    b=0;
 678:	10 92 71 01 	sts	0x0171, r1
	c=0;
 67c:	10 92 a0 01 	sts	0x01A0, r1
	SPI_send_array(PS2_POLLBUTTON,9);
 680:	69 e0       	ldi	r22, 0x09	; 9
 682:	82 e8       	ldi	r24, 0x82	; 130
 684:	91 e0       	ldi	r25, 0x01	; 1
 686:	2a df       	rcall	.-428    	; 0x4dc <SPI_send_array>
	SPI_PORT |= _BV(SS_PIN);	// Driving Attention Low
 688:	c0 9a       	sbi	0x18, 0	; 24
 68a:	8f e9       	ldi	r24, 0x9F	; 159
 68c:	9f e0       	ldi	r25, 0x0F	; 15
 68e:	01 97       	sbiw	r24, 0x01	; 1
 690:	f1 f7       	brne	.-4      	; 0x68e <scan_PS2+0x1c>
 692:	00 c0       	rjmp	.+0      	; 0x694 <scan_PS2+0x22>
 694:	00 00       	nop
 696:	08 95       	ret

00000698 <USART_Init>:
	}else 
	{
		while (! (UCSR0A & (1 << RXC0)) );
    	return UDR0;
	}
}
 698:	78 94       	sei
 69a:	66 23       	and	r22, r22
 69c:	79 f0       	breq	.+30     	; 0x6bc <USART_Init+0x24>
 69e:	90 93 98 00 	sts	0x0098, r25
 6a2:	80 93 99 00 	sts	0x0099, r24
 6a6:	ea e9       	ldi	r30, 0x9A	; 154
 6a8:	f0 e0       	ldi	r31, 0x00	; 0
 6aa:	80 81       	ld	r24, Z
 6ac:	88 61       	ori	r24, 0x18	; 24
 6ae:	80 83       	st	Z, r24
 6b0:	ed e9       	ldi	r30, 0x9D	; 157
 6b2:	f0 e0       	ldi	r31, 0x00	; 0
 6b4:	80 81       	ld	r24, Z
 6b6:	86 60       	ori	r24, 0x06	; 6
 6b8:	80 83       	st	Z, r24
 6ba:	08 95       	ret
 6bc:	90 93 90 00 	sts	0x0090, r25
 6c0:	89 b9       	out	0x09, r24	; 9
 6c2:	8a b1       	in	r24, 0x0a	; 10
 6c4:	88 61       	ori	r24, 0x18	; 24
 6c6:	8a b9       	out	0x0a, r24	; 10
 6c8:	e5 e9       	ldi	r30, 0x95	; 149
 6ca:	f0 e0       	ldi	r31, 0x00	; 0
 6cc:	80 81       	ld	r24, Z
 6ce:	86 60       	ori	r24, 0x06	; 6
 6d0:	80 83       	st	Z, r24
 6d2:	08 95       	ret

000006d4 <USART_Transmitchar>:
 6d4:	66 23       	and	r22, r22
 6d6:	41 f0       	breq	.+16     	; 0x6e8 <USART_Transmitchar+0x14>
 6d8:	eb e9       	ldi	r30, 0x9B	; 155
 6da:	f0 e0       	ldi	r31, 0x00	; 0
 6dc:	90 81       	ld	r25, Z
 6de:	95 ff       	sbrs	r25, 5
 6e0:	fd cf       	rjmp	.-6      	; 0x6dc <USART_Transmitchar+0x8>
 6e2:	80 93 9c 00 	sts	0x009C, r24
 6e6:	08 95       	ret
 6e8:	5d 9b       	sbis	0x0b, 5	; 11
 6ea:	fe cf       	rjmp	.-4      	; 0x6e8 <USART_Transmitchar+0x14>
 6ec:	8c b9       	out	0x0c, r24	; 12
 6ee:	08 95       	ret

000006f0 <USART_TransmitString>:



void USART_TransmitString(char *str, uint8_t n)
{
 6f0:	1f 93       	push	r17
 6f2:	cf 93       	push	r28
 6f4:	df 93       	push	r29
 6f6:	ec 01       	movw	r28, r24
	 while(*str>0)
 6f8:	88 81       	ld	r24, Y
 6fa:	88 23       	and	r24, r24
 6fc:	39 f0       	breq	.+14     	; 0x70c <USART_TransmitString+0x1c>
 6fe:	16 2f       	mov	r17, r22
 700:	21 96       	adiw	r28, 0x01	; 1
	 {
		 USART_Transmitchar(*str,n);
 702:	61 2f       	mov	r22, r17
 704:	e7 df       	rcall	.-50     	; 0x6d4 <USART_Transmitchar>



void USART_TransmitString(char *str, uint8_t n)
{
	 while(*str>0)
 706:	89 91       	ld	r24, Y+
 708:	81 11       	cpse	r24, r1
 70a:	fb cf       	rjmp	.-10     	; 0x702 <USART_TransmitString+0x12>
	 {
		 USART_Transmitchar(*str,n);
		 //_delay_ms(1);
		 str++;
	 }
}
 70c:	df 91       	pop	r29
 70e:	cf 91       	pop	r28
 710:	1f 91       	pop	r17
 712:	08 95       	ret

00000714 <__subsf3>:
 714:	50 58       	subi	r21, 0x80	; 128

00000716 <__addsf3>:
 716:	bb 27       	eor	r27, r27
 718:	aa 27       	eor	r26, r26
 71a:	0e d0       	rcall	.+28     	; 0x738 <__addsf3x>
 71c:	a3 c0       	rjmp	.+326    	; 0x864 <__fp_round>
 71e:	94 d0       	rcall	.+296    	; 0x848 <__fp_pscA>
 720:	30 f0       	brcs	.+12     	; 0x72e <__addsf3+0x18>
 722:	99 d0       	rcall	.+306    	; 0x856 <__fp_pscB>
 724:	20 f0       	brcs	.+8      	; 0x72e <__addsf3+0x18>
 726:	31 f4       	brne	.+12     	; 0x734 <__addsf3+0x1e>
 728:	9f 3f       	cpi	r25, 0xFF	; 255
 72a:	11 f4       	brne	.+4      	; 0x730 <__addsf3+0x1a>
 72c:	1e f4       	brtc	.+6      	; 0x734 <__addsf3+0x1e>
 72e:	89 c0       	rjmp	.+274    	; 0x842 <__fp_nan>
 730:	0e f4       	brtc	.+2      	; 0x734 <__addsf3+0x1e>
 732:	e0 95       	com	r30
 734:	e7 fb       	bst	r30, 7
 736:	7f c0       	rjmp	.+254    	; 0x836 <__fp_inf>

00000738 <__addsf3x>:
 738:	e9 2f       	mov	r30, r25
 73a:	a5 d0       	rcall	.+330    	; 0x886 <__fp_split3>
 73c:	80 f3       	brcs	.-32     	; 0x71e <__addsf3+0x8>
 73e:	ba 17       	cp	r27, r26
 740:	62 07       	cpc	r22, r18
 742:	73 07       	cpc	r23, r19
 744:	84 07       	cpc	r24, r20
 746:	95 07       	cpc	r25, r21
 748:	18 f0       	brcs	.+6      	; 0x750 <__addsf3x+0x18>
 74a:	71 f4       	brne	.+28     	; 0x768 <__addsf3x+0x30>
 74c:	9e f5       	brtc	.+102    	; 0x7b4 <__addsf3x+0x7c>
 74e:	bd c0       	rjmp	.+378    	; 0x8ca <__fp_zero>
 750:	0e f4       	brtc	.+2      	; 0x754 <__addsf3x+0x1c>
 752:	e0 95       	com	r30
 754:	0b 2e       	mov	r0, r27
 756:	ba 2f       	mov	r27, r26
 758:	a0 2d       	mov	r26, r0
 75a:	0b 01       	movw	r0, r22
 75c:	b9 01       	movw	r22, r18
 75e:	90 01       	movw	r18, r0
 760:	0c 01       	movw	r0, r24
 762:	ca 01       	movw	r24, r20
 764:	a0 01       	movw	r20, r0
 766:	11 24       	eor	r1, r1
 768:	ff 27       	eor	r31, r31
 76a:	59 1b       	sub	r21, r25
 76c:	99 f0       	breq	.+38     	; 0x794 <__addsf3x+0x5c>
 76e:	59 3f       	cpi	r21, 0xF9	; 249
 770:	50 f4       	brcc	.+20     	; 0x786 <__addsf3x+0x4e>
 772:	50 3e       	cpi	r21, 0xE0	; 224
 774:	68 f1       	brcs	.+90     	; 0x7d0 <__addsf3x+0x98>
 776:	1a 16       	cp	r1, r26
 778:	f0 40       	sbci	r31, 0x00	; 0
 77a:	a2 2f       	mov	r26, r18
 77c:	23 2f       	mov	r18, r19
 77e:	34 2f       	mov	r19, r20
 780:	44 27       	eor	r20, r20
 782:	58 5f       	subi	r21, 0xF8	; 248
 784:	f3 cf       	rjmp	.-26     	; 0x76c <__addsf3x+0x34>
 786:	46 95       	lsr	r20
 788:	37 95       	ror	r19
 78a:	27 95       	ror	r18
 78c:	a7 95       	ror	r26
 78e:	f0 40       	sbci	r31, 0x00	; 0
 790:	53 95       	inc	r21
 792:	c9 f7       	brne	.-14     	; 0x786 <__addsf3x+0x4e>
 794:	7e f4       	brtc	.+30     	; 0x7b4 <__addsf3x+0x7c>
 796:	1f 16       	cp	r1, r31
 798:	ba 0b       	sbc	r27, r26
 79a:	62 0b       	sbc	r22, r18
 79c:	73 0b       	sbc	r23, r19
 79e:	84 0b       	sbc	r24, r20
 7a0:	ba f0       	brmi	.+46     	; 0x7d0 <__addsf3x+0x98>
 7a2:	91 50       	subi	r25, 0x01	; 1
 7a4:	a1 f0       	breq	.+40     	; 0x7ce <__addsf3x+0x96>
 7a6:	ff 0f       	add	r31, r31
 7a8:	bb 1f       	adc	r27, r27
 7aa:	66 1f       	adc	r22, r22
 7ac:	77 1f       	adc	r23, r23
 7ae:	88 1f       	adc	r24, r24
 7b0:	c2 f7       	brpl	.-16     	; 0x7a2 <__addsf3x+0x6a>
 7b2:	0e c0       	rjmp	.+28     	; 0x7d0 <__addsf3x+0x98>
 7b4:	ba 0f       	add	r27, r26
 7b6:	62 1f       	adc	r22, r18
 7b8:	73 1f       	adc	r23, r19
 7ba:	84 1f       	adc	r24, r20
 7bc:	48 f4       	brcc	.+18     	; 0x7d0 <__addsf3x+0x98>
 7be:	87 95       	ror	r24
 7c0:	77 95       	ror	r23
 7c2:	67 95       	ror	r22
 7c4:	b7 95       	ror	r27
 7c6:	f7 95       	ror	r31
 7c8:	9e 3f       	cpi	r25, 0xFE	; 254
 7ca:	08 f0       	brcs	.+2      	; 0x7ce <__addsf3x+0x96>
 7cc:	b3 cf       	rjmp	.-154    	; 0x734 <__addsf3+0x1e>
 7ce:	93 95       	inc	r25
 7d0:	88 0f       	add	r24, r24
 7d2:	08 f0       	brcs	.+2      	; 0x7d6 <__addsf3x+0x9e>
 7d4:	99 27       	eor	r25, r25
 7d6:	ee 0f       	add	r30, r30
 7d8:	97 95       	ror	r25
 7da:	87 95       	ror	r24
 7dc:	08 95       	ret

000007de <__fixunssfsi>:
 7de:	5b d0       	rcall	.+182    	; 0x896 <__fp_splitA>
 7e0:	88 f0       	brcs	.+34     	; 0x804 <__fixunssfsi+0x26>
 7e2:	9f 57       	subi	r25, 0x7F	; 127
 7e4:	90 f0       	brcs	.+36     	; 0x80a <__fixunssfsi+0x2c>
 7e6:	b9 2f       	mov	r27, r25
 7e8:	99 27       	eor	r25, r25
 7ea:	b7 51       	subi	r27, 0x17	; 23
 7ec:	a0 f0       	brcs	.+40     	; 0x816 <__fixunssfsi+0x38>
 7ee:	d1 f0       	breq	.+52     	; 0x824 <__fixunssfsi+0x46>
 7f0:	66 0f       	add	r22, r22
 7f2:	77 1f       	adc	r23, r23
 7f4:	88 1f       	adc	r24, r24
 7f6:	99 1f       	adc	r25, r25
 7f8:	1a f0       	brmi	.+6      	; 0x800 <__fixunssfsi+0x22>
 7fa:	ba 95       	dec	r27
 7fc:	c9 f7       	brne	.-14     	; 0x7f0 <__fixunssfsi+0x12>
 7fe:	12 c0       	rjmp	.+36     	; 0x824 <__fixunssfsi+0x46>
 800:	b1 30       	cpi	r27, 0x01	; 1
 802:	81 f0       	breq	.+32     	; 0x824 <__fixunssfsi+0x46>
 804:	62 d0       	rcall	.+196    	; 0x8ca <__fp_zero>
 806:	b1 e0       	ldi	r27, 0x01	; 1
 808:	08 95       	ret
 80a:	5f c0       	rjmp	.+190    	; 0x8ca <__fp_zero>
 80c:	67 2f       	mov	r22, r23
 80e:	78 2f       	mov	r23, r24
 810:	88 27       	eor	r24, r24
 812:	b8 5f       	subi	r27, 0xF8	; 248
 814:	39 f0       	breq	.+14     	; 0x824 <__fixunssfsi+0x46>
 816:	b9 3f       	cpi	r27, 0xF9	; 249
 818:	cc f3       	brlt	.-14     	; 0x80c <__fixunssfsi+0x2e>
 81a:	86 95       	lsr	r24
 81c:	77 95       	ror	r23
 81e:	67 95       	ror	r22
 820:	b3 95       	inc	r27
 822:	d9 f7       	brne	.-10     	; 0x81a <__fixunssfsi+0x3c>
 824:	3e f4       	brtc	.+14     	; 0x834 <__fixunssfsi+0x56>
 826:	90 95       	com	r25
 828:	80 95       	com	r24
 82a:	70 95       	com	r23
 82c:	61 95       	neg	r22
 82e:	7f 4f       	sbci	r23, 0xFF	; 255
 830:	8f 4f       	sbci	r24, 0xFF	; 255
 832:	9f 4f       	sbci	r25, 0xFF	; 255
 834:	08 95       	ret

00000836 <__fp_inf>:
 836:	97 f9       	bld	r25, 7
 838:	9f 67       	ori	r25, 0x7F	; 127
 83a:	80 e8       	ldi	r24, 0x80	; 128
 83c:	70 e0       	ldi	r23, 0x00	; 0
 83e:	60 e0       	ldi	r22, 0x00	; 0
 840:	08 95       	ret

00000842 <__fp_nan>:
 842:	9f ef       	ldi	r25, 0xFF	; 255
 844:	80 ec       	ldi	r24, 0xC0	; 192
 846:	08 95       	ret

00000848 <__fp_pscA>:
 848:	00 24       	eor	r0, r0
 84a:	0a 94       	dec	r0
 84c:	16 16       	cp	r1, r22
 84e:	17 06       	cpc	r1, r23
 850:	18 06       	cpc	r1, r24
 852:	09 06       	cpc	r0, r25
 854:	08 95       	ret

00000856 <__fp_pscB>:
 856:	00 24       	eor	r0, r0
 858:	0a 94       	dec	r0
 85a:	12 16       	cp	r1, r18
 85c:	13 06       	cpc	r1, r19
 85e:	14 06       	cpc	r1, r20
 860:	05 06       	cpc	r0, r21
 862:	08 95       	ret

00000864 <__fp_round>:
 864:	09 2e       	mov	r0, r25
 866:	03 94       	inc	r0
 868:	00 0c       	add	r0, r0
 86a:	11 f4       	brne	.+4      	; 0x870 <__fp_round+0xc>
 86c:	88 23       	and	r24, r24
 86e:	52 f0       	brmi	.+20     	; 0x884 <__fp_round+0x20>
 870:	bb 0f       	add	r27, r27
 872:	40 f4       	brcc	.+16     	; 0x884 <__fp_round+0x20>
 874:	bf 2b       	or	r27, r31
 876:	11 f4       	brne	.+4      	; 0x87c <__fp_round+0x18>
 878:	60 ff       	sbrs	r22, 0
 87a:	04 c0       	rjmp	.+8      	; 0x884 <__fp_round+0x20>
 87c:	6f 5f       	subi	r22, 0xFF	; 255
 87e:	7f 4f       	sbci	r23, 0xFF	; 255
 880:	8f 4f       	sbci	r24, 0xFF	; 255
 882:	9f 4f       	sbci	r25, 0xFF	; 255
 884:	08 95       	ret

00000886 <__fp_split3>:
 886:	57 fd       	sbrc	r21, 7
 888:	90 58       	subi	r25, 0x80	; 128
 88a:	44 0f       	add	r20, r20
 88c:	55 1f       	adc	r21, r21
 88e:	59 f0       	breq	.+22     	; 0x8a6 <__fp_splitA+0x10>
 890:	5f 3f       	cpi	r21, 0xFF	; 255
 892:	71 f0       	breq	.+28     	; 0x8b0 <__fp_splitA+0x1a>
 894:	47 95       	ror	r20

00000896 <__fp_splitA>:
 896:	88 0f       	add	r24, r24
 898:	97 fb       	bst	r25, 7
 89a:	99 1f       	adc	r25, r25
 89c:	61 f0       	breq	.+24     	; 0x8b6 <__fp_splitA+0x20>
 89e:	9f 3f       	cpi	r25, 0xFF	; 255
 8a0:	79 f0       	breq	.+30     	; 0x8c0 <__fp_splitA+0x2a>
 8a2:	87 95       	ror	r24
 8a4:	08 95       	ret
 8a6:	12 16       	cp	r1, r18
 8a8:	13 06       	cpc	r1, r19
 8aa:	14 06       	cpc	r1, r20
 8ac:	55 1f       	adc	r21, r21
 8ae:	f2 cf       	rjmp	.-28     	; 0x894 <__fp_split3+0xe>
 8b0:	46 95       	lsr	r20
 8b2:	f1 df       	rcall	.-30     	; 0x896 <__fp_splitA>
 8b4:	08 c0       	rjmp	.+16     	; 0x8c6 <__fp_splitA+0x30>
 8b6:	16 16       	cp	r1, r22
 8b8:	17 06       	cpc	r1, r23
 8ba:	18 06       	cpc	r1, r24
 8bc:	99 1f       	adc	r25, r25
 8be:	f1 cf       	rjmp	.-30     	; 0x8a2 <__fp_splitA+0xc>
 8c0:	86 95       	lsr	r24
 8c2:	71 05       	cpc	r23, r1
 8c4:	61 05       	cpc	r22, r1
 8c6:	08 94       	sec
 8c8:	08 95       	ret

000008ca <__fp_zero>:
 8ca:	e8 94       	clt

000008cc <__fp_szero>:
 8cc:	bb 27       	eor	r27, r27
 8ce:	66 27       	eor	r22, r22
 8d0:	77 27       	eor	r23, r23
 8d2:	cb 01       	movw	r24, r22
 8d4:	97 f9       	bld	r25, 7
 8d6:	08 95       	ret

000008d8 <__gesf2>:
 8d8:	66 d0       	rcall	.+204    	; 0x9a6 <__fp_cmp>
 8da:	08 f4       	brcc	.+2      	; 0x8de <__gesf2+0x6>
 8dc:	8f ef       	ldi	r24, 0xFF	; 255
 8de:	08 95       	ret

000008e0 <__mulsf3>:
 8e0:	0b d0       	rcall	.+22     	; 0x8f8 <__mulsf3x>
 8e2:	c0 cf       	rjmp	.-128    	; 0x864 <__fp_round>
 8e4:	b1 df       	rcall	.-158    	; 0x848 <__fp_pscA>
 8e6:	28 f0       	brcs	.+10     	; 0x8f2 <__mulsf3+0x12>
 8e8:	b6 df       	rcall	.-148    	; 0x856 <__fp_pscB>
 8ea:	18 f0       	brcs	.+6      	; 0x8f2 <__mulsf3+0x12>
 8ec:	95 23       	and	r25, r21
 8ee:	09 f0       	breq	.+2      	; 0x8f2 <__mulsf3+0x12>
 8f0:	a2 cf       	rjmp	.-188    	; 0x836 <__fp_inf>
 8f2:	a7 cf       	rjmp	.-178    	; 0x842 <__fp_nan>
 8f4:	11 24       	eor	r1, r1
 8f6:	ea cf       	rjmp	.-44     	; 0x8cc <__fp_szero>

000008f8 <__mulsf3x>:
 8f8:	c6 df       	rcall	.-116    	; 0x886 <__fp_split3>
 8fa:	a0 f3       	brcs	.-24     	; 0x8e4 <__mulsf3+0x4>

000008fc <__mulsf3_pse>:
 8fc:	95 9f       	mul	r25, r21
 8fe:	d1 f3       	breq	.-12     	; 0x8f4 <__mulsf3+0x14>
 900:	95 0f       	add	r25, r21
 902:	50 e0       	ldi	r21, 0x00	; 0
 904:	55 1f       	adc	r21, r21
 906:	62 9f       	mul	r22, r18
 908:	f0 01       	movw	r30, r0
 90a:	72 9f       	mul	r23, r18
 90c:	bb 27       	eor	r27, r27
 90e:	f0 0d       	add	r31, r0
 910:	b1 1d       	adc	r27, r1
 912:	63 9f       	mul	r22, r19
 914:	aa 27       	eor	r26, r26
 916:	f0 0d       	add	r31, r0
 918:	b1 1d       	adc	r27, r1
 91a:	aa 1f       	adc	r26, r26
 91c:	64 9f       	mul	r22, r20
 91e:	66 27       	eor	r22, r22
 920:	b0 0d       	add	r27, r0
 922:	a1 1d       	adc	r26, r1
 924:	66 1f       	adc	r22, r22
 926:	82 9f       	mul	r24, r18
 928:	22 27       	eor	r18, r18
 92a:	b0 0d       	add	r27, r0
 92c:	a1 1d       	adc	r26, r1
 92e:	62 1f       	adc	r22, r18
 930:	73 9f       	mul	r23, r19
 932:	b0 0d       	add	r27, r0
 934:	a1 1d       	adc	r26, r1
 936:	62 1f       	adc	r22, r18
 938:	83 9f       	mul	r24, r19
 93a:	a0 0d       	add	r26, r0
 93c:	61 1d       	adc	r22, r1
 93e:	22 1f       	adc	r18, r18
 940:	74 9f       	mul	r23, r20
 942:	33 27       	eor	r19, r19
 944:	a0 0d       	add	r26, r0
 946:	61 1d       	adc	r22, r1
 948:	23 1f       	adc	r18, r19
 94a:	84 9f       	mul	r24, r20
 94c:	60 0d       	add	r22, r0
 94e:	21 1d       	adc	r18, r1
 950:	82 2f       	mov	r24, r18
 952:	76 2f       	mov	r23, r22
 954:	6a 2f       	mov	r22, r26
 956:	11 24       	eor	r1, r1
 958:	9f 57       	subi	r25, 0x7F	; 127
 95a:	50 40       	sbci	r21, 0x00	; 0
 95c:	8a f0       	brmi	.+34     	; 0x980 <__mulsf3_pse+0x84>
 95e:	e1 f0       	breq	.+56     	; 0x998 <__mulsf3_pse+0x9c>
 960:	88 23       	and	r24, r24
 962:	4a f0       	brmi	.+18     	; 0x976 <__mulsf3_pse+0x7a>
 964:	ee 0f       	add	r30, r30
 966:	ff 1f       	adc	r31, r31
 968:	bb 1f       	adc	r27, r27
 96a:	66 1f       	adc	r22, r22
 96c:	77 1f       	adc	r23, r23
 96e:	88 1f       	adc	r24, r24
 970:	91 50       	subi	r25, 0x01	; 1
 972:	50 40       	sbci	r21, 0x00	; 0
 974:	a9 f7       	brne	.-22     	; 0x960 <__mulsf3_pse+0x64>
 976:	9e 3f       	cpi	r25, 0xFE	; 254
 978:	51 05       	cpc	r21, r1
 97a:	70 f0       	brcs	.+28     	; 0x998 <__mulsf3_pse+0x9c>
 97c:	5c cf       	rjmp	.-328    	; 0x836 <__fp_inf>
 97e:	a6 cf       	rjmp	.-180    	; 0x8cc <__fp_szero>
 980:	5f 3f       	cpi	r21, 0xFF	; 255
 982:	ec f3       	brlt	.-6      	; 0x97e <__mulsf3_pse+0x82>
 984:	98 3e       	cpi	r25, 0xE8	; 232
 986:	dc f3       	brlt	.-10     	; 0x97e <__mulsf3_pse+0x82>
 988:	86 95       	lsr	r24
 98a:	77 95       	ror	r23
 98c:	67 95       	ror	r22
 98e:	b7 95       	ror	r27
 990:	f7 95       	ror	r31
 992:	e7 95       	ror	r30
 994:	9f 5f       	subi	r25, 0xFF	; 255
 996:	c1 f7       	brne	.-16     	; 0x988 <__mulsf3_pse+0x8c>
 998:	fe 2b       	or	r31, r30
 99a:	88 0f       	add	r24, r24
 99c:	91 1d       	adc	r25, r1
 99e:	96 95       	lsr	r25
 9a0:	87 95       	ror	r24
 9a2:	97 f9       	bld	r25, 7
 9a4:	08 95       	ret

000009a6 <__fp_cmp>:
 9a6:	99 0f       	add	r25, r25
 9a8:	00 08       	sbc	r0, r0
 9aa:	55 0f       	add	r21, r21
 9ac:	aa 0b       	sbc	r26, r26
 9ae:	e0 e8       	ldi	r30, 0x80	; 128
 9b0:	fe ef       	ldi	r31, 0xFE	; 254
 9b2:	16 16       	cp	r1, r22
 9b4:	17 06       	cpc	r1, r23
 9b6:	e8 07       	cpc	r30, r24
 9b8:	f9 07       	cpc	r31, r25
 9ba:	c0 f0       	brcs	.+48     	; 0x9ec <__fp_cmp+0x46>
 9bc:	12 16       	cp	r1, r18
 9be:	13 06       	cpc	r1, r19
 9c0:	e4 07       	cpc	r30, r20
 9c2:	f5 07       	cpc	r31, r21
 9c4:	98 f0       	brcs	.+38     	; 0x9ec <__fp_cmp+0x46>
 9c6:	62 1b       	sub	r22, r18
 9c8:	73 0b       	sbc	r23, r19
 9ca:	84 0b       	sbc	r24, r20
 9cc:	95 0b       	sbc	r25, r21
 9ce:	39 f4       	brne	.+14     	; 0x9de <__fp_cmp+0x38>
 9d0:	0a 26       	eor	r0, r26
 9d2:	61 f0       	breq	.+24     	; 0x9ec <__fp_cmp+0x46>
 9d4:	23 2b       	or	r18, r19
 9d6:	24 2b       	or	r18, r20
 9d8:	25 2b       	or	r18, r21
 9da:	21 f4       	brne	.+8      	; 0x9e4 <__fp_cmp+0x3e>
 9dc:	08 95       	ret
 9de:	0a 26       	eor	r0, r26
 9e0:	09 f4       	brne	.+2      	; 0x9e4 <__fp_cmp+0x3e>
 9e2:	a1 40       	sbci	r26, 0x01	; 1
 9e4:	a6 95       	lsr	r26
 9e6:	8f ef       	ldi	r24, 0xFF	; 255
 9e8:	81 1d       	adc	r24, r1
 9ea:	81 1d       	adc	r24, r1
 9ec:	08 95       	ret

000009ee <_exit>:
 9ee:	f8 94       	cli

000009f0 <__stop_program>:
 9f0:	ff cf       	rjmp	.-2      	; 0x9f0 <__stop_program>
